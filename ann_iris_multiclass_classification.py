# -*- coding: utf-8 -*-
"""ANN IRIS MULTICLASS CLASSIFICATION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CbZh8PAdWEHrrvYu37MRRNlZxH27J2at
"""

# import all necessary library
import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
import keras
from keras.models import Sequential
from keras.layers import Dense

#load data from sklearn.datasets
data=load_iris()
X=data.data
y=data.target

#lets find what are the category of plant which we want to classify
print(data.target_names)
#there are three class and its example of mulitclass classification
#['setosa' 'versicolor' 'virginica']

#shape of X
X.shape

#Target array from
Y=pd.get_dummies(y).values

#split data into train and testing dataset
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(X,Y,test_size=0.30,random_state=42)

#lets form model for multiclass calss classification
#lets make model from keras
model=Sequential()
#lets form 1st hidden layer
model.add(Dense(4,input_shape=(4,),activation='relu',kernel_initializer='glorot_uniform'))
#output layer
model.add(Dense(3,activation='softmax',kernel_initializer='glorot_uniform'))

#compile our model
model.compile(optimizer='Adam',loss='categorical_crossentropy',metrics=['accuracy'])

#model fit and train training dataset
model.fit(x_train,y_train,batch_size=10,epochs=150)

pred=model.predict(x_test)
print(pred)

#find which prob is more
pred_class=np.argmax(pred,axis=1)
actual_class=np.argmax(y_test,axis=1)

from sklearn.metrics import accuracy_score
print("Accuracy of Model is:",accuracy_score(actual_class,pred_class))







